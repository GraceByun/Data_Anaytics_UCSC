

DELIMITER $

DROP TRIGGER IF EXISTS SCORE_TRIGGER_INSERT$

DROP TRIGGER IF EXISTS SCORE_TRIGGER_UPDATE$

DROP TRIGGER IF EXISTS SCORE_TRIGGER_DELETE$

CREATE TABLE SCORE_AUDIT AS SELECT * FROM SCORE WHERE 1=0$

ALTER TABLE SCORE_AUDIT ADD CREATE_DATE DATETIME$

ALTER TABLE SCORE_AUDIT ADD HISTORY_DATE DATETIME$

ALTER TABLE SCORE_AUDIT ADD USERNAME VARCHAR(100)$

ALTER TABLE SCORE_AUDIT ADD ACTION VARCHAR(100)$




CREATE TRIGGER SCORE_TRIGGER_INSERT AFTER INSERT ON SCORE FOR EACH ROW
BEGIN
		INSERT INTO SCORE_AUDIT
		(STUDENT_ID
		,EVENT_ID
		,SCORE
		,CREATE_DATE
		,HISTORY_DATE
		,USERNAME
        ,ACTION
		) VALUES
		(
		NEW.STUDENT_ID
		,NEW.EVENT_ID
		,NEW.SCORE
		,NOW()
        ,CURRENT_TIMESTAMP()
		,USER()
        ,'INSERT'
		); 

END$


CREATE TRIGGER SCORE_TRIGGER_UPDATE AFTER UPDATE ON SCORE FOR EACH ROW
BEGIN
		INSERT INTO SCORE_AUDIT
		(STUDENT_ID
		,EVENT_ID
		,SCORE
		,CREATE_DATE
		,HISTORY_DATE
		,USERNAME
        ,ACTION
        ) VALUES
		(
		 NEW.STUDENT_ID
		,NEW.EVENT_ID
		,NEW.SCORE
		,NOW()
        ,CURRENT_TIMESTAMP()
		,USER()
        ,'UPDATE'
		); 

END$

CREATE TRIGGER SCORE_TRIGGER_DELETE AFTER DELETE ON SCORE FOR EACH ROW
BEGIN
		INSERT INTO SCORE_AUDIT
		(STUDENT_ID
		,EVENT_ID
		,SCORE
		,CREATE_DATE
		,HISTORY_DATE
		,USERNAME
        ,ACTION
		) VALUES
		(
		OLD.STUDENT_ID
		,OLD.EVENT_ID
		,OLD.SCORE
        ,NOW()
		,CURRENT_TIMESTAMP()
		,USER()
        ,'DELETE'
		); 

END$


DELIMITER ;



